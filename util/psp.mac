TITLE PDPPSP - READ SYSTEM INFORMATION OVER AUX CIRCUITS
;MODIFIED 9/11/78 (VERSION 3.7) TO REP SYS 29,33,35,36,37,38,39 
; AND BUG FIX.  (E.G.)
;REPORT SYSTEMS 29,33,34,35,36,37,38,39 VER 3.6  (ED GAUCI)
;MODIFIED 3/16/77 (VERSION 3.5) TO RUN SLVPSP FROM (UTIL)
;MODIFIED 2/24/77 (VERSION 3.4) TO PRINT DATE AND TIME OF CRASH FILES
;MODIFIED 2/10/77 (VERSION 3.3) TO CLEAR 39 ALSO.
;MODIFIED 12/26 (VERSION 3.2) TO CLEAR 33,34,35,36,38 AND ONLY
; REPORT SOFT ERRS IF >4
;MODIFIED 12/12 (VERSION 3.1) FROM INFRED TO...
;GIVE SPECIAL MSG FOR DISK DAMAGE REPORT
;REPORT DISPATCH DOWN
;GIVE DATE, TIME, AND VERSION
;EXCLUDE SYSTEM 37,39,88 FROM VERSION 3.00
;REPORT RIB ERRS
;REPORT DISK DRIVE LETTER DESIGNATION
;USE DIFFERENT DEFAULT SWITCHES
;NEEDS EEPLIB AND CIRTRN FOR LOADING


MLON



LOC 137
        XWD 3,7
RELOC

EXTERNAL OUTDAT

P=17
PTR=15  ;POINTER TO WHICH SYSTEM
C=16    ;INPUT CHARACTER
FL==0   ;FLAG REGISTER

T1=1
T2=2
T3=3
T4=4

TRYMAX==3       ;MAX TIMES TO RETRY

ARRAY PDL[40],AUXSTR[20]

INTERNAL P,C,T1,T2,T3
EXTERNAL PUTPC,GETPC,TRNINI,JOBFF,JOBREL

JBTUNM==-22
JBTUN1==-21

;FLAG DEFS

FL.CHK==000001  ;CHECK
FL.ERR==000002  ;ERRORS
FL.AER==000004  ;ALL ERRORS
FL.SER==000010  ;ALL SOFT ERRORS
FL.VER==000020  ;VERSION (SYSTEM NAME)
FL.TIM==000040  ;TIMES (CHARGES)
FL.USE==000100  ;USE INFO
FL.CRA==000200  ;CRASHES
FL.DSK==000400  ;DISK SPACE LEFT
FL.COR==001000  ;PAGES
FL.STR==002000  ;STREAM
FL.UPT==004000  ;UPTIME
FL.TBL==010000  ;TABLE FORMAT

FL.SUM==FL.VER!FL.UPT!FL.CRA!FL.ERR!FL.COR!FL.TBL!FL.DSK
        ;SET THESE ON SUMMARY COMMAND

ARRAY SAVBUF[30]

VERBUF=SAVBUF
UPTBUF=VERBUF+4
PAGBUF=UPTBUF+1
USEBUF=PAGBUF+2
USABUF=USEBUF+1
TIMBUF=USABUF+1
SWPBUF=TIMBUF+2
PARBUF=SWPBUF+1
DMGBUF=PARBUF+1
CRSNUM=DMGBUF+1
ROMBUF=CRSNUM+1
HERBUF=ROMBUF+1
SERBUF=HERBUF+1
RIBBUF=SERBUF+1
DSPBUF=RIBBUF+1

        DEFINE CRLF <OUTSTR [ASCIZ /
/]>
STPT:   RESET
;       BEGINNING OF CODE FOR VERSION 3.7
;       REMOTE USERNAME = LOGGED IN USERNAME.
;
        MOVEM   17,SAVREG+17            ; SAVE REGISTERS
        MOVEI   17,SAVREG
        BLT     17,SAVREG+16
        HRROI   2,-22                   ; GET 1ST HALF OF USERNAME
        GETTAB  2,
        MOVEI   2,0
        HRROI   3,-21                   ; GET 2ND HALF OF USERNAME
        GETTAB  3,
        MOVEI   3,0
        DMOVEM  2,USER
        MOVE    3,[POINT 6,USER]
        MOVE    2,[POINT 6,LOGST]
        MOVEI   4,14
GET1:   ILDB    6,3                     ; GET A LETTER
        CAIN    6,0                     ; IS IT A NULL ?
        JRST    [SOJG   4,GET1
                 JRST   ENDIT]
        IDPB    6,2                     ; DEPOSIT INTO STRING.
        SOJG    4,GET1
ENDIT:  MOVEI   6,":"                   ; PUT IN THE ':'
        SUBI    6,40                    ; MAKE IT SIXBIT
        IDPB    6,2
        HRLZI   17,SAVREG               ; RESTORE ORIGINAL REGISTERS.
        BLT     17,17
;  END OF CODE FOR VERSION 3.7
        MOVEI FL,0
        MOVE P,[IOWD 40,PDL]
        SETZM UNVPTR#   ;UNAVAILABLE SYSTEMS
        SETZM NOCPTR#   ;NO CIRCUIT SYSTEMS
        OUTSTR  [ASCIZ /
VERSION /]
        HLRZ    T1,137
        PUSHJ   P,OUTDEC
        OUTCHI  "."
        HRRZ    T1,137
        PUSHJ   P,OUTDEC
        SETZB   1,2
        CRLF
        PUSHJ   P,OUTDAT
        CRLF
        RESCAN
SCNLP:  INCHWL C
        CAIN C,12
        JRST [MOVSI PTR,-TBLEN
                HRRI PTR,NUMTAB
                JRST SYSLPG]
        CAIE C,";"      ;IF ; WAS USED, LOOK FOR SYSTEM #'S FOLLOWED
        JRST SCNLP      ;BY SWITCHES, EACH PRECEDED BY /.
        HRRZ T1,JOBFF   ;EACH SWITCH MAY BE SHORTENED TO A UNIQUE STRING
NUMSCN: PUSHJ P,RDNUM   ;BUT WILL BE TRUNCATED TO 6 CHARS.
        JUMPE T2,NUMDON
        HRRZ T3,T1
        CAMG T3,JOBREL
        JRST COROK
        IORI T3,1777
        CORE T3,
         JRST   [OUTSTR [ASCIZ /
OUT OF CORE/]
                EXIT]
COROK:  MOVEM T2,(T1)
        ADD T1,[-1,,1]
        CAIE C,"/"
        JRST NUMSCN
        JRST NUMDON

RDNUM:  MOVEI T2,0
RDNM1:  INCHWL C
        CAIE C,"/"
        CAIN C,12
CPOPJ:  POPJ P,
        CAIG C,"9"
        CAIGE C,"0"
        JRST RDNM1      ;SEPARATE SYS #'S BY ANY NON-NUMERIC CHAR (SPACE OR COMMA)
RDNM2:  IMULI T2,^D10
        ADDI T2,-"0"(C)
        INCHWL C
        CAIG C,"9"
        CAIGE C,"0"
        POPJ P,
        JRST RDNM2

NUMDON: MOVE PTR,JOBFF
        HLL PTR,T1
        SUBI T1,1
        HRRZM T1,JOBFF
        SKIPL PTR
        MOVE PTR,[-TBLEN,,NUMTAB]
SWTTST: CAIE C,"/"
        JRST SYSLPG
SWTSCN: PUSHJ P,GETNAM  ;GET THE SWITCH
        MOVSI T1,770000
        SETZB T2,T4     ;WE WANT T4 ZERO LATER
MSKMAK: TDNE T1,ACCUM
        IOR T2,T1
        LSH T1,-6
        JUMPN T1,MSKMAK ;GEN A MASK FOR PARTIAL COMPARE
        JUMPE T2,ILLCMD ;NOTHING THERE
        MOVSI T1,-CMDLEN        ;T4 IS ALREADY ZERO (PARTIAL MATCH)
CMDSRC: MOVE T3,CMDTAB(T1)
        CAMN T3,ACCUM
        JRST    [XCT CMDTB2(T1) ;EXACT MATCH, DO IT
                JRST CMDNXT]
        AND T3,T2
        CAMN T3,ACCUM
        JRST    [JUMPN T4,ILLCMD        ;PARTIAL MATCH, NOT FIRST THEN ERR
                MOVE T4,T1      ;SAVE POINTER
                JRST .+1]
        AOBJN T1,CMDSRC
        JUMPN T4,[XCT CMDTB2(T4)
                JRST CMDNXT]
ILLCMD: CLRBFI
        MOVE T3,[SIXBIT /HELP/]
        AND T3,T2
        CAMN T3,ACCUM
        JUMPN T2,HELPCM
        OUTSTR [ASCIZ /
ILLEGAL COMMAND /]
        MOVE T2,ACCUM
        PUSHJ P,OUTSIX
        EXIT

HELPCM: OUTSTR [ASCIZ /
LEGAL SWITCHES ARE

/]
        MOVSI T4,-CMDLEN
HELPPR: MOVE T2,CMDTAB(T4)
        PUSHJ P,OUTSIX
        OUTSTR [ASCIZ /
/]
        AOBJN T4,HELPPR
        EXIT

GETNAM: SETZM ACCUM#
        MOVE T1,[POINT 6,ACCUM]
GETNM1: INCHWL C
        CAIE C," "
        CAIN C,11
        JRST GETNM1     ;IGNORE LEADING SPACES AND TABS
GETNM2: CAIG C,"Z"+40
        CAIGE C,"A"
        POPJ P,         ;OUT OF RANGE
        CAIGE C,"A"+40
        CAIG C,"Z"
        SKIPA
        POPJ P,
        CAILE C,"Z"
        TRZA C,100      ;LOWER CASE TO SIXBIT
        SUBI C,40       ;UPPER CASE TO SIXBIT
        TLNE T1,770000  ;ONLY COLLECT 6
        IDPB C,T1
        INCHWL C
        JRST GETNM2

CMDNXT: CAIN C,12
        JRST SYSLPG
        CAIN C,"/"
        JRST SWTSCN
        INCHWL C
        JRST CMDNXT
;COMMAND TABLE

        DEFINE CMDS
<       X CHECK,CHK
        X SUMMARY,SUM
        X ERRORS,ERR
        X VERSION,VER
        X TIMES,TIM
        X USE,USE
        X CRASHES,CRA
        X ALLERR,AER
        X DISK,DSK
        X CORE,COR
        X STREAM,STR
        X SERROR,SER
        X TABLE,TBL
        X UP,UPT
>

        DEFINE X (A,B)
<       <SIXBIT /A/>>

CMDTAB: CMDS
CMDLEN==.-CMDTAB

        DEFINE X (A,B)
<       TRO FL,FL.'B>

CMDTB2: CMDS

SYSLPG: TRNN FL,-1
        TRO FL,FL.AER!FL.DSK!FL.COR!FL.CRA!FL.VER!FL.UPT
        TRNE FL,FL.TBL!FL.CHK   ;DEFAULT SWITCHES ARE /ALLERR,/DSIK,/CORE
        TRZ FL,FL.AER           ;/CRASHES,/VER,/UP
        SETZM HEDSET#   ;NO HEADER YET
SYSLP:  TRNE FL,FL.CHK!FL.TBL
        JRST SYSLP2
        OUTSTR [ASCIZ /
SYSTEM /]                       ;HERE FOR EACH SYSTEM
        HRRZ T1,(PTR)
        PUSHJ P,OUTDEC
SYSLP2: MOVE T3,[POINT 7,AUXSTR]
        MOVE T2,[POINT 6,LOGST]
;
NXTUSC: ILDB T1,T2
        ADDI T1,40
        IDPB T1,T3
        CAIE T1,":"     ;STOP WITH THE : AFTER USER NAME
        JRST NXTUSC
USRFIN: HRRZ T1,(PTR)
        PUSHJ P,INLDEC          ;NOW SYSTEM NUMBER INT STRING
        MOVEI T1,";"
        IDPB T1,T3
        MOVEI T1,TRYMAX
        MOVEM T1,TRYTIM#        ;SET RETRY NUMBER
;BUILD THE CIRCUIT AND READ CRASH INFO

AUXTRY: SETZM VERBUF
        MOVE T1,[VERBUF,,VERBUF+1]
        BLT T1,DSPBUF   ;CLEAR TABLE INFO
        MOVEI T1,AUXSTR
        CREAUX T1,
         JRST NOAUX             ;NOT SET UP
        MOVEM T1,PORT#
        MOVE T1,[POINT 7,[ASCIZ /


SET LOGOUT
RUN (UTIL)SLVPSP
/]]
        HRL T2,PORT
        HRRI T2,3
        PUSHJ P,SNDSTR  ;SEND STRING
        HRRO T1,PORT
        MOVE T2,[TIMADR,,ZAPADR]        ;ERROR RETURNS
        MOVE T3,[^D18,,^D6]
        PUSHJ P,TRNINI
DSPLP:  PUSHJ P,@GETPC          ;GET A CHARACTER
        CAIGE C,100
        JRST BADCRS             ;SHOULD BE A DISPATCH CHR
        SUBI C,100
        CAILE C,DSPNUM
        JRST BADCRS             ;BAD INFORMATION
        XCT DSPTAB(C)

DSPTAB: JRST SYSNAM     ;100 SYSTEM NAME
        JRST UPTIM      ;101 UPTIME
        JRST NUMUSR     ;102 USERS
        JRST NUMRUN     ;103 NUMBER IN RUN QUE
        JRST NUMIO      ;104 NUMBER IN IO QUE
        JRST STRROM     ;105 STRUCTURE SPACE
        JRST DSKERR     ;106 DISK ERROR
        JRST DSKDAM     ;107 DISK DAMAGE
        JRST RDCRS      ;110 CRASH NUMBER
        JRST DONCRS     ;111 END
        JRST NUMDIO     ;112 NUMBER IN DISK IO QUE
        JRST NUMPAG     ;113 USER/TOTAL NUMBER OF PAGES
        JRST TIM0       ;114 TRU AND TERMINAL TIME
        JRST SWPERR     ;115 SWAP ERRORS
        JRST DSPDWN     ;116 DISPATCH DOWN
        JRST DERFIN     ;117 DISK ERRORS FINISHED
        JRST PARERR     ;120 PARITY ERROR COUNT
DSPNUM==.-DSPTAB-1
TIM0:   PUSHJ P,RDWRD1
        PUSHJ P,RDWRD   ;TWO WORDS OF DATA
        TRNN FL,FL.TIM
        JRST DSPLP
        TRNE FL,FL.TBL!FL.CHK
        JRST    [DMOVE T1,WRDBUF
                DMOVEM T1,TIMBUF
                JRST DSPLP]
        OUTSTR [ASCIZ /
        TRU /]
        MOVE T1,WRDBUF
        IDIVI T1,^D100
        IDIVI T1,^D100
        PUSH P,T2       ;FRACTIONS OF A TRU
        PUSHJ P,OUTDEC
        OUTCHI "."
        POP P,T2
        PUSHJ P,OUTDC1
        OUTSTR [ASCIZ / TERMINAL TIME /]
        MOVE T1,WRDBUF+1
        IDIVI T1,^D60   ;T1=MIN, T2=SEC
        PUSH P,T2
        IDIVI T1,^D60   ;T1=HR, T2=MIN
        PUSH P,T2
        PUSHJ P,OUTDEC
        OUTCHI ":"
        POP P,T1
        PUSHJ P,OUTDC1
        OUTCHI ":"
        POP P,T1
        PUSHJ P,OUTDC1
        JRST DSPLP

SWPERR: PUSHJ P,RDWRD1
        TRNN FL,FL.ERR!FL.SER!FL.AER!FL.CHK
        JRST DSPLP
        TRNE FL,FL.TBL!FL.CHK
        JRST    [MOVE T1,WRDBUF
                MOVEM T1,SWPBUF
                JRST DSPLP]
        OUTSTR [ASCIZ /
        /]
        HLRZ T1,WRDBUF
        PUSHJ P,OUTDEC
        OUTSTR [ASCIZ / SWAP ERROR/]
        HLRZ T1,WRDBUF
        CAIE T1,1
        OUTCHI "S"
        OUTSTR [ASCIZ /
        /]
        HRRZ T1,WRDBUF
        TRZ T1,760000
        PUSHJ P,OUTDEC
        OUTSTR [ASCIZ / PAGES LOST/]
        JRST DSPLP
SYSNAM: PUSHJ P,RDWRD1  ;READ FIRST WORD OF DATA
        REPEAT 3,<PUSHJ P,RDWRD>        ;TOTAL OF 4
        TRNN FL,FL.VER!FL.CHK
        JRST DSPLP      ;UNUUSED
        TRNE FL,FL.TBL!FL.CHK
        JRST    [MOVE T1,[WRDBUF,,VERBUF]
                BLT T1,VERBUF+3
                JRST DSPLP]
        OUTSTR [ASCIZ /
        /]
        OUTSTR WRDBUF
        JRST DSPLP

UPTIM:  PUSHJ P,RDWRD1
        TRNN FL,FL.UPT
        JRST DSPLP
        TRNE FL,FL.TBL!FL.CHK
        JRST    [MOVE T1,WRDBUF
                MOVEM T1,UPTBUF
                JRST DSPLP]
        TRNN FL,FL.VER
        OUTSTR [ASCIZ /
/]
        OUTSTR [ASCIZ / UP /]
        MOVE T1,WRDBUF
        IDIVI T1,^D3600
        IDIVI T1,^D60   ;HR IN T1, MIN IN T2
        PUSH P,T2
        CAIGE   T1,^D10
        OUTCHI  " "             ;OUTPUT LEADING SPACE IF NECESSARY
        PUSHJ P,OUTDEC
        POP P,T1
        OUTCHI ":"
        PUSHJ P,OUTDC1
        JRST DSPLP

DSPDWN: TRNN    FL,FL.AER!FL.SER!FL.ERR!FL.CHK
        JRST    DSPLP
        TRNE    FL,FL.TBL!FL.CHK
        JRST    [SETOM  DSPBUF
                 JRST   DSPLP]
        OUTSTR  [ASCIZ /
DISPATCH BASE IS DOWN
*********************
/]
        JRST    DSPLP

STRROM: PUSHJ P,RDWRD1
        PUSHJ P,RDWRD   ;FIRST WORD IS NAME, SECOND SPACE
        TRNN FL,FL.DSK
        JRST DSPLP
        TRNE FL,FL.CHK!FL.TBL
        JRST    [MOVE T1,WRDBUF+1
                ADDM T1,ROMBUF
                JRST DSPLP]
        OUTSTR [ASCIZ /
        /]
        MOVE T2,WRDBUF
        PUSHJ P,OUTSIX
        OUTCHI " "
        MOVE T1,WRDBUF+1
        PUSHJ P,OUTDEC
        JRST DSPLP

OUTSIX: MOVEI T1,0
        LSHC T1,6
        OUTCHI " "(T1)
        JUMPN T2,OUTSIX
        POPJ P,
NUMUSR: PUSHJ P,RDWRD1
        TRNN FL,FL.USE
        JRST DSPLP
        TRNE FL,FL.TBL!FL.CHK
        JRST    [MOVE T1,WRDBUF
                MOVEM T1,USEBUF
                SETZM USABUF
                JRST DSPLP]
        OUTSTR [ASCIZ /
        USERS=/]
        MOVE T1,WRDBUF
        JRST NUMCM2

NUMRUN: PUSHJ P,RDWRD1
        MOVEI T2,[ASCIZ / RUN=/]
NUMCOM: TRNN FL,FL.USE
        JRST DSPLP
        MOVE T1,WRDBUF
        TRNE FL,FL.TBL!FL.CHK
        JRST    [ADDM T1,USABUF
                JRST DSPLP]
        OUTSTR (T2)
NUMCM2: PUSHJ P,OUTDEC
        JRST DSPLP

NUMIO:  PUSHJ P,RDWRD1
        MOVEI T2,[ASCIZ / IO=/]
        JRST NUMCOM

NUMDIO: PUSHJ P,RDWRD1
        MOVEI T2,[ASCIZ / DIO=/]
        JRST NUMCOM

;CALLED BY DSKERR
DERACM: HLRZ T1,WRDBUF+3
        HRRZ T2,WRDBUF+3
        ADD T1,T2
        ADDM T1,HERBUF  ;ACCUMULATE HARD ERRORS
        HRRZ    T2,WRDBUF+4
        ADDM    T2,RIBBUF       ;AND RIB ERRS
        HLRZ T1,WRDBUF+2
        HRRZ T2,WRDBUF+2
        ADD T1,T2
        ADDM    T1,SERBUF       ;AND SOFT ERRS
        JRST    DSPLP
DSKERR: PUSHJ P,RDWRD1
        REPEAT 4,<PUSHJ P,RDWRD>
        TRNN FL,FL.CHK!FL.ERR!FL.SER!FL.AER
        JRST DSPLP
        TRNE    FL,FL.SER
        JRST    DERPR1
        TRNN    FL,FL.AER
        JRST    DERACM          ;IF ALLERR AND SERROR BOTH NOT SET, JUST REPORT TOTALS
        HRRZ    T1,WRDBUF+4
        SKIPN WRDBUF+3
        CAIE    T1,0    ;REPORT UNLESS ONLY THING WRONG IS FEWER THAN 5 SOFT ERRS
        JRST DERPR1
        HLRZ T1,WRDBUF+2
        HRRZ T2,WRDBUF+2
        ADD T1,T2
        CAIG T1,4
        JRST DSPLP
DERPR1: OUTSTR  [ASCIZ /
        DR=/]
        LDB     T1,[POINT 3,WRDBUF+4,17]
        MOVEI   T2,"A"(T1)      ;GET DRIVE LETTER (WORKS ONLY FOR UP TO 8 DRIVES)
        OUTCHR  T2
        OUTCHI  11
        MOVE    T2,WRDBUF
        PUSHJ P,OUTSIX
        OUTCHI "("
        MOVE T2,WRDBUF+1        ;SECOND WORD IS UNIT ID
        PUSHJ P,OUTSIX
        OUTCHI ")"
        HLRZ T1,WRDBUF+2        ;3RD WORD IS SOFT ERRS
        JUMPE T1,NOSDEV         ;LH IS DEV, RH IS DAT
        OUTSTR [ASCIZ / SDEV /]
        PUSHJ P,OUTDEC
NOSDEV: HRRZ T1,WRDBUF+2
        JUMPE T1,NOSDAT
        OUTSTR [ASCIZ / SDAT /]
        PUSHJ P,OUTDEC
NOSDAT: HLRZ T1,WRDBUF+3        ;FOURTH WORD IS HARD ERRS
        JUMPE T1,NOHDEV
        OUTSTR [ASCIZ / HDEV /]
        PUSHJ P,OUTDEC
NOHDEV: HRRZ T1,WRDBUF+3
        JUMPE T1,RIBE
        OUTSTR [ASCIZ / HDAT /]
        PUSHJ P,OUTDEC
RIBE:   HRRZ    T1,WRDBUF+4     ;RH OF 4TH WORD IS RIB ERRS
        JUMPE   T1,DSPLP        ;DONE IF NONE
        OUTSTR  [ASCIZ / RIB / ]
        PUSHJ   P,OUTDEC
        JRST    DSPLP

DSKDAM: SETOM DMGBUF
        TRNN FL,FL.ERR!FL.SER!FL.AER
        JRST DSPLP
        TRNN FL.TBL!FL.CHK
        OUTSTR [ASCIZ /
****DISK DAMAGE REPORT....TYPE (SYS)RECOV.SYS AND REPORT TO
****CENTER MANAGER. 
/]
        JRST    DSPLP

NUMPAG: PUSHJ P,RDWRD1
        PUSHJ P,RDWRD
        TRNN FL,FL.COR!FL.CHK
        JRST DSPLP
        TRNE FL,FL.TBL!FL.CHK
        JRST    [DMOVE T1,WRDBUF
                DMOVEM T1,PAGBUF
                JRST DSPLP]
        TRNN FL,FL.VER!FL.UPT
        OUTSTR [ASCIZ /
/]
        OUTCHI 11
        MOVE T1,WRDBUF
        ADDI T1,^D511
        IDIVI T1,^D512
        PUSHJ P,OUTDEC  ;NUMBER OF PAGES FOR USER
        MOVE T1,WRDBUF+1
        ADDI T1,^D511
        IDIVI T1,^D512
        OUTCHI "/"
        PUSHJ P,OUTDEC  ;NUMBER OF PAGES FOR SYSTEM
        OUTSTR [ASCIZ / PAGES/]
        JRST DSPLP
DERFIN: TRNE FL,FL.AER!FL.CHK!FL.TBL
        JRST DSPLP
        TRNE FL,FL.ERR!FL.SER
        JRST DSPLP
        SKIPE   RIBBUF
        JRST    DERFN1
        SKIPN HERBUF
        SKIPE SERBUF
        SKIPA
        JRST DSPLP
DERFN1: OUTSTR [ASCIZ /
        ERRORS/]
        SKIPN HERBUF
        JRST DERSFN
        OUTSTR [ASCIZ / HARD /]
        MOVE T1,HERBUF
        PUSHJ P,OUTDEC
DERSFN: SKIPN T1,SERBUF
        JRST DERRBN
        OUTSTR [ASCIZ / SOFT /]
        PUSHJ P,OUTDEC
DERRBN: SKIPN   T1,RIBBUF
        JRST    DSPLP
        OUTSTR  [ASCIZ / RIB /]
        PUSHJ   P,OUTDEC
        JRST    DSPLP

PARERR: PUSHJ P,RDWRD1
        TRNN FL,FL.AER!FL.SER!FL.ERR
        JRST DSPLP      ;NOT NEEDED
        MOVE T1,WRDBUF  ;NUMBER OF ERRORS
        TRNE FL,FL.TBL!FL.CHK
        JRST    [MOVEM T1,PARBUF        ;SAVE FOR TABLE PRINTOUT
                JRST DSPLP]
        OUTSTR [ASCIZ /
        PARITY ERRORS /]
        PUSHJ P,OUTDEC
        JRST DSPLP
RDCRS:  MOVE T4,[POINT 6,WRDBUF,17]
        MOVEI T3,3      ;3 CHRS OF NUMBER
        PUSHJ P,RDWRD0
        PUSHJ P,RDWRD
        AOS CRSNUM
        TRNN FL,FL.TBL!FL.CHK
        TRNN FL,FL.CRA
        JRST DSPLP
        OUTSTR [ASCIZ /
        CRA/]
        HRLZ T2,WRDBUF
        PUSHJ P,OUTSIX
;FOLLOWING CODE INTRODUCED IN VERSION 3.4 BY SAM SANFILIPPO
        OUTCHI 11
        HLRZ T1,WRDBUF+1
        IDIVI T1,^D31   ;T1 HAS YR AND MON, T2 DAY-1
        PUSH P,T1
        MOVEI T1,1(T2)
        PUSHJ P,OUTDEC
        POP P,T1
        IDIVI T1,^D12   ;T1 HAS YR-64, T2 HAS MON-1
        OUTSTR @MONTAB(T2)
        ADDI T1,^D64
        PUSHJ P,OUTDEC
        OUTCHI 11
        HRRZ T1,WRDBUF+1
        IDIVI T1,^D3600
        IMULI T1,^D100
        IDIVI T2,^D60
        ADD T1,T2
        PUSHJ P,OUTDEC
;END OF CODE INSERTION FOR VERSION 3.4
        JRST DSPLP      ;NEXT THING

RDWRD1: MOVE T4,[POINT 6,WRDBUF]
RDWRD:  MOVEI T3,6
RDWRD0: PUSHJ P,@GETPC
        CAIL C,100
        JRST    [POP P,T1
                JRST BADCRS]    ;GET OUT OF PUSHJFAIL
        IDPB C,T4
        SOJG T3,RDWRD0          ;GET A FULL WORD
        POPJ P,

ARRAY WRDBUF[5],DATBUF[3]
DONCRS: TRNN FL,FL.TBL!FL.CHK
        JRST DONCR0
        SKIPN   RIBBUF
        TRNN FL,FL.CHK
        JRST TBLPRT     ;FORCE PRINTING
        SKIPN CRSNUM
        SKIPE HERBUF
        JRST TBLPRT
        SKIPN PARBUF
        SKIPE SWPBUF
        JRST TBLPRT
        SKIPN   DMGBUF
        SKIPE   DSPBUF
        JRST    TBLPRT
        MOVE    T1, SERBUF
        CAIL    T1,5
        JRST    TBLPRT
        MOVE T1,PAGBUF+1
        CAIL T1,^D508*1000
        JRST DONCR0
TBLPRT: SKIPE HEDSET
        JRST HEDDON     ;ALREADY HAVE A HEADER
        OUTSTR [ASCIZ /
SYSTEM  /]
        TRNN FL,FL.CHK
        JRST .+3
        TRZ FL,FL.TIM!FL.USE!FL.DSK!FL.UPT!FL.STR       ;NOTE SOME SWITCHES ARE MUTUALLY EXCLUSIVE
        TRO FL,FL.VER!FL.ERR!FL.CRA!FL.COR
        TRNE FL,FL.SER
        TRO FL,FL.ERR           ;IF FL.SER, THEN FL.ERR
        MOVEI T4,10     ;COLUMN POSITION
        MOVSI T3,-HEDNUM
HEDLP1: TDNN FL,HEDTB1(T3)
        JRST HEDLP2
        OUTSTR @HEDTB2(T3)      ;IF FLAG SET, OUTPUT COLUMN HEADER
        MOVEM T4,HEDTB3(T3)
        ADDI T4,10
HEDLP2: AOBJN T3,HEDLP1
        SETOM HEDSET
        JRST HEDDON

        DEFINE TBMK
<       X VER,<VERSION >
        X COR,< PAGES  >
        X UPT,<   UP   >
        X DSK,<  DISK  >
        X CRA,<CRASHES >
        X USE,<  USE   >
        X TIM,< TIMES  >
        X ERR,<DSPATCH>
        X ERR,< ERRORS >
>
        DEFINE X (A,B)
<       FL.'A>
HEDTB1: TBMK
HEDNUM==.-HEDTB1
HEDTB3: BLOCK HEDNUM
        DEFINE X (A,B)
<       [ASCIZ /B/]>
HEDTB2: TBMK
HEDDON: OUTSTR [ASCIZ /

/]
        HRRZ T1,(PTR)
        PUSHJ P,DEC4
        MOVEI T4,4
        MOVEI T3,10
        TRNN FL,FL.VER
        JRST HEDCOR
        PUSHJ P,GOSPC   ;GET TO CORRECT PLACE
        MOVE T1,[POINT 7,VERBUF,27]
        MOVEI T2,10
VERLP:  ILDB C,T1
        JUMPE C,VERLP2
        OUTCHR C
        ADDI T4,1
        SOJG T2,VERLP
VERLP2: ADDI T3,10
HEDCOR: TRNN FL,FL.COR
        JRST HEDUPT
        MOVE T1,PAGBUF
        PUSHJ P,GOSPC
        ADDI T1,^D511
        IDIVI T1,^D512
        PUSHJ P,DEC5
        ADDI T4,5
        ADDI T3,10
HEDUPT: TRNN FL,FL.UPT
        JRST HEDDSK
        PUSHJ P,GOSPC
        MOVE T1,UPTBUF
        IDIVI T1,^D3600
        IDIVI T1,^D60
        PUSH P,T2
        PUSHJ P,DEC4
        OUTCHI ":"
        POP P,T1
        PUSHJ P,OUTDC1
        ADDI T4,7
        ADDI T3,10
HEDDSK: TRNN FL,FL.DSK
        JRST HEDCRA
        PUSHJ P,GOSPC
        MOVE T1,ROMBUF
        PUSHJ P,DEC7
        ADDI T4,7
        ADDI T3,10
HEDCRA: TRNN FL,FL.CRA
        JRST HEDUSE
        PUSHJ P,GOSPC
        MOVE T1,CRSNUM
        PUSHJ P,DEC4
        ADDI T4,4
        ADDI T3,10
HEDUSE: TRNN FL,FL.USE
        JRST HEDTIM
        PUSHJ P,GOSPC
        MOVE T1,USEBUF
        PUSHJ P,DEC3
        OUTCHI "("
        MOVE T1,USABUF
        CAIL T1,^D10
        ADDI T4,1       ;NUMBER OF DIGITS
        PUSHJ P,OUTDEC
        OUTCHI ")"
        ADDI T4,6
        ADDI T3,10
HEDTIM: TRNN FL,FL.TIM
        JRST HEDDSP
        PUSHJ P,GOSPC
        MOVE T1,TIMBUF
        IDIVI T1,^D10000
        PUSHJ P,DEC7
        ADDI T4,7
        ADDI T3,10
HEDDSP: TRNN    FL,FL.ERR
        JRST    HEDERR
        PUSHJ   P,GOSPC
        ADDI    T3,10
        SKIPN   DSPBUF
        JRST    HEDERR
        OUTSTR  [ASCIZ /DOWN/]
        ADDI    T4,4
HEDERR: TRNN FL,FL.ERR
        JRST HEDLN2
        MOVEI T1,0
        SKIPE HERBUF
        ADDI T1,1
        SKIPE SERBUF
        ADDI T1,1
        SKIPE DMGBUF
        ADDI T1,1
        SKIPE SWPBUF
        ADDI T1,2
        SKIPE PARBUF
        ADDI T1,1
        SKIPE   RIBBUF
        ADDI    T1,1
        MOVEM T1,ERRLNS#
        JUMPE T1,HEDLN2
        MOVSI T1,-HEDNUM+1      ;PLACES TO LOOK (SEE HEDERL)
        PUSHJ P,HEDERL
HEDLN2: TRNN FL,FL.ERR!FL.TIM!FL.COR
        JRST DONCR0
        TRNN FL,FL.TIM!FL.COR
        SKIPE ERRLNS    ;ANY MORE ERROR LINES?
        SKIPA
        JRST DONCR0     ;NO, ACTUALLY FINISHED
        OUTSTR [ASCIZ /
/]
        MOVEI T4,0      ;YES, PRINT SECOND LINE OF CORE OR TIMES?
        TRNN FL,FL.COR
        JRST LN2TIM     ;NOT TIME, TRY CORE
        MOVE T3,HEDTB3+1
        PUSHJ P,GOSPC
        MOVE T1,PAGBUF+1
        ADDI T1,^D511
        IDIVI T1,^D512
        PUSHJ P,DEC5
        ADDI T4,5
LN2TIM: TRNN FL,FL.TIM
        JRST LN2ERR
        MOVE T3,HEDTB3+6        ;BACK TO TIME COLUMN
        PUSHJ P,GOSPC
        MOVE T1,TIMBUF+1
        IDIVI T1,^D60
        IDIVI T1,^D60
        PUSH P,T2
        PUSHJ P,DEC4
        OUTCHI ":"
        POP P,T1
        PUSHJ P,OUTDC1
        ADDI T4,7
LN2ERR: TRNE FL,FL.ERR
        SKIPN ERRLNS
        JRST DONCR0
LNNERR: MOVE T3,HEDTB3+10       ;BACK TO ERRORS COLUMN
        MOVE T1,ERRPTR
        PUSHJ P,HEDERL
        SKIPN ERRLNS
        JRST DONCR0
        OUTSTR [ASCIZ /
/]
        MOVEI T4,0
        JRST LNNERR     ;FOR MULTIPLE LINES
GOSPC:  CAML T4,T3
        POPJ P,
        OUTCHI " "
        AOJA T4,GOSPC

HEDERL: AOBJN T1,.+1(T1)
        JRST HERCHK
        JRST SERCHK
        JRST DMGCHK
        JRST PARPRT
        JRST    RIBPRT
        JRST SWPTTL
        JRST SWPPRT

HERCHK: SKIPN HERBUF
        JRST HEDERL
        MOVEM T1,ERRPTR#
        PUSHJ P,GOSPC
        OUTSTR [ASCIZ /HARD/]
        SOS ERRLNS
        MOVE T1,HERBUF
        JRST DEC4

SERCHK: SKIPN SERBUF
        JRST HEDERL
        MOVEM T1,ERRPTR
        PUSHJ P,GOSPC
        OUTSTR [ASCIZ /SOFT/]
        SOS ERRLNS
        MOVE T1,SERBUF
        JRST DEC4

DMGCHK: SKIPN DMGBUF
        JRST HEDERL
        MOVEM T1,ERRPTR
        PUSHJ P,GOSPC
        OUTSTR [ASCIZ /DAMAGE/]
        SOS ERRLNS
        POPJ P,

RIBPRT: SKIPN   RIBBUF
        JRST    HEDERL
        MOVEM   T1,ERRPTR
        PUSHJ   P,GOSPC
        OUTSTR  [ASCIZ /RIB/]
        SOS     ERRLNS
        MOVE    T1,RIBBUF
        JRST    DEC4

SWPTTL: SKIPN SWPBUF
        JRST HEDERL
        MOVEM T1,ERRPTR
        PUSHJ P,GOSPC
        OUTSTR [ASCIZ /  SWAP/]
        SOS ERRLNS
        POPJ P,

SWPPRT: PUSHJ P,GOSPC
        HLRZ T1,SWPBUF
        PUSHJ P,DEC3
        OUTCHI "/"
        HRRZ T1,SWPBUF
        TRZ T1,760000
        SOS ERRLNS
        JRST OUTDEC

PARPRT: SKIPN PARBUF
        JRST HEDERL
        MOVEM T1,ERRPTR
        PUSHJ P,GOSPC
        OUTSTR [ASCIZ /PAR./]
        MOVE T1,PARBUF
        SOS ERRLNS
        JRST DEC4

DEC7:   CAML T1,[^D1000000]
        JRST OUTDEC
        OUTCHI " "
DEC6:   CAIL T1,^D100000
        JRST OUTDEC
        OUTCHI " "
DEC5:   CAIL T1,^D10000
        JRST OUTDEC
        OUTCHI " "
DEC4:   CAIL T1,^D1000
        JRST OUTDEC
        OUTCHI " "
DEC3:   CAIL T1,^D100
        JRST OUTDEC
        OUTCHI " "
DEC2:   CAIGE T1,^D10
        OUTCHI " "
        JRST OUTDEC
DONCR0: SETOM TRYTIM    ;WANT TO GO TO NEXT SYS
        TRNN FL,FL.TBL!FL.CHK
        TRNN FL,FL.CRA
        JRST DONCR1
        SKIPN CRSNUM
        OUTSTR [ASCIZ /
        NO CRASHES/]
DONCR1: HRLOI T1,377777
        INTENB T1,
         JFCL
        MOVE T1,PORT
        ZAPCIR T1,      ;AND ZAP CIRCUIT
        JRST DONCR2     ;RETRY OR NEXT SYSTEM

BADCRS: OUTSTR [ASCIZ /
***BAD INFORMATION RECEIVED/]
        JRST DONCR1

NUMTAB: DEC 24,26,29,33,34,35,36,39,55,57

TBLEN==.-NUMTAB

BADUUO: OUTSTR [ASCIZ /
***BAD INTERUPT CALL/]
        EXIT

USRNAM: SIXBIT /OPER: /
        SIXBIT /      /
        SIXBIT /:/
USER:   0
        0
LOGST:  0
        0
SAVREG: BLOCK 20

OUTDC1: CAIGE T1,^D10
        OUTCHI "0"
OUTDEC: IDIVI T1,^D10
        HRLM T2,(P)
        SKIPE T1
        PUSHJ P,OUTDEC
        HLRZ T1,(P)
        OUTCHI "0"(T1)
        POPJ P,
INLDEC: IDIVI T1,^D10
        HRLM T2,(P)
        SKIPE T1
        PUSHJ P,INLDEC
        HLRZ T1,(P)
        ADDI T1,"0"
        IDPB T1,T3
        POPJ P,

        DEFINE X(A)
<IRP A,<[ASCIZ /-A-/]>>

MONTAB: X <JAN,FEB,MAR,APR,MAY,JUNE,JULY,AUG,SEPT,OCT,NOV,DEC>

NOAUX:  CAIN T1,AUXSTR
        JRST NOTIMP     ;NO AUX CIRCUITS
        HLRZ T2,T1      ;ERROR FROM 10
        JUMPE T2,SUPERR ;NO, FROM SUPERVISOR
        TRNN FL,FL.CHK!FL.TBL
        OUTSTR @ERR10(T2)
        SOSLE TRYTIM
        JRST AUXTRY
        MOVE T1,NOCPTR
        HRRM PTR,NOCPTR
        HRLM T1,(PTR)
        AOBJN PTR,SYSLP
        JRST TABFIN

NOTIMP: OUTSTR [ASCIZ /
AUXILIARY CIRCUITS NOT IMPLIMENTED/]
        EXIT

DONCR2: SOSL TRYTIM
        JRST AUXTRY
        AOBJN PTR,SYSLP
TABFIN: TRNN FL,FL.TBL!FL.CHK
        EXIT
        SKIPN T4,UNVPTR
        JRST TABFN1
        OUTSTR [ASCIZ /

UNAVAILABLE SYSTEMS /]
        PUSHJ P,SYSPRT
TABFN1: SKIPN T4,NOCPTR
        EXIT
        OUTSTR [ASCIZ /

UNABLE TO BUILD CIRCUITS TO /]
        PUSHJ P,SYSPRT
        EXIT

SYSPRT: HRRZ T1,(T4)
        PUSHJ P,OUTDEC
        HLRZ T4,(T4)
        JUMPE T4,CPOPJ
        OUTCHI ","
        JRST SYSPRT
SUPERR: CAILE T1,4
        JRST BADSUP
        TRNN FL,FL.CHK!FL.TBL
        OUTSTR @SUPTAB(T1)
        MOVE T1,UNVPTR
        HRRM PTR,UNVPTR
        HRLM T1,(PTR)
        AOBJN PTR,SYSLP
        JRST TABFIN

BADSUP: OUTSTR [ASCIZ /
***SUPERVISOR ERROR /]
        PUSHJ P,OUTDEC
        EXIT

SUPTAB: [ASCIZ /
***UNRECOGNIZABLE ERROR/]
        [ASCIZ /
***BAD NAME FORMAT/]
        [ASCIZ /
***NAME NOT IN MUD/]
        [ASCIZ /
***BAD MUD/]
        [ASCIZ /
***SYSTEM UNAVAILABLE/]

ERR10:  0
        [ASCIZ /
***TOO MANY CIRCUITS/]
        [ASCIZ /
***BAD USER NAME/]
        [ASCIZ /
***OUT OF PDP-10 CHANNELS/]
        [ASCIZ /
***NO RESPONSE TO REQUEST/]
        [ASCIZ /
***NO RESPONSE TO STRING/]
        [ASCIZ /
***NO CIRCUIT ESTABLISHED/]
        [ASCIZ /
***ERROR RESPONSE TO REQUEST/]
        [ASCIZ /
***CURCUIT NOT RESPONTIND/]
        [ASCIZ /
***CIRCUIT ZAPPED/]
TIMADR: SKIPA T4,[10,,0]
ZAPADR: MOVSI T4,11
        HRLOI T1,377777
        INTENB T1,
         JFCL
        MOVE T1,PORT
        ZAPCIR T1,
        MOVE P,[IOWD 40,PDL]
        MOVE T1,T4
        JRST NOAUX

SNDSTR: ILDB T3,T1
        JUMPE T3,CPOPJ
        CAIE T3,12      ;IGNORE LINE FEEDS
        AUXCAL T2,T3
        JRST SNDSTR

        END STPT
  k